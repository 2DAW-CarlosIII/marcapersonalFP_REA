openapi: 3.0.1
info:
  title: MarcaPersonalFP - OpenAPI 3.0
  version: 1.0.11
  description: >-
    Aquí podrás encontrar los endpoint de la API del servidor marcapersonalFP
    basada en la especificación OpenAPI 3.0.

    El objetivo de este proyecto es la creación de una página web
    marcaPersonalFP.es en la que los estudiantes de Formación Profesional puedan
    publicar su currículo y los logros conseguidos a lo largo de su estancia en
    el centro.


    El diagrama de casos de uso inicial que se plantea es el que se puede ver en
    la siguiente imagen:


    ![Diagrama de casos de uso
    marcapersonalfp.es](https://raw.githubusercontent.com/2DAW-CarlosIII/marcapersonalFP_REA/master/documentos/marcaPersonalFP-usecase.png)


    Por su parte, la base de datos que dará soporte a la web seguirá el
    siguiente esquema:


    ![Esquema relacional de la base de datos
    marcapersonalfp.es](https://raw.githubusercontent.com/2DAW-CarlosIII/marcapersonalFP_REA/master/documentos/marcapersonalFP.drawio.png)


    Enlaces interesantes del proyecto:

    - [Página web en producción](https://marcapersonalfp.es)

    - [Código fuente de la página
    web](https://github.com/2DAW-CarlosIII/marcapersonalFP23_24)

    - [Recurso Educativo
    Abierto](https://github.com/2DAW-CarlosIII/marcapersonalFP_REA)
  termsOfService: https://marcapersonalFP.es/termsOfService
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
externalDocs:
  description: Proyecto de innovación
  url: >-
    https://github.com/2DAW-CarlosIII/marcapersonalFP_REA/blob/master/documentos/Proyecto%20Marca%20Personal%20FP.pdf
servers:
  - url: https://localhost/api/v1
    variables: {}
    description: Servidor localhost
  - url: https://marcapersonalFP.test/api/v1
    variables: {}
    description: Entorno de producción Carlos III
  - url: https://marcapersonalFP.cifpcarlos3.es/api/v1
    variables: {}
    description: Entorno de producción
  - url: https://marcapersonalFP.test/api/records
    variables: {}
    description: Entorno React
tags:
  - name: user
    description: Operaciones con los usuarios
  - name: curriculo
    description: Operaciones con los currículos
  - name: proyecto
    description: Operaciones con los proyectos
  - name: reconocimiento
    description: Operaciones con los reconocimiento
  - name: actividad
    description: Operaciones con las actividades
paths:
  /proyectos:
    get:
      tags:
        - proyecto
      summary: Devuelve todos los proyectos
      description: Devuelve todos los proyectos
      operationId: getProyectos
      parameters:
        - name: limit
          in: query
          description: Número máximo de proyectos a devolver
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Número de proyectos a saltar
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proyecto'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proyecto'
        '400':
          description: Invalid ID supplied
        '404':
          description: proyecto not found
    post:
      tags:
        - proyecto
      summary: Añade un nuevo proyecto
      description: Añade un nuevo proyecto
      operationId: addProyecto
      requestBody:
        description: Crea un nuevo Proyecto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Proyecto'
          application/xml:
            schema:
              $ref: '#/components/schemas/Proyecto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Proyecto'
        required: true
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proyecto'
            application/xml:
              schema:
                $ref: '#/components/schemas/Proyecto'
        '405':
          description: Invalid input
  /proyectos/{id}:
    get:
      tags:
        - proyecto
      summary: Encuentra un proyecto según su ID
      description: Devuelve un único proyecto
      operationId: getProyectoById
      parameters:
        - name: id
          in: path
          description: ID del proyecto a devolver
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proyecto'
            application/xml:
              schema:
                $ref: '#/components/schemas/Proyecto'
        '400':
          description: Invalid ID supplied
        '404':
          description: proyecto not found
    put:
      tags:
        - proyecto
      summary: Actualiza un proyecto con los datos del formulario
      description: ''
      operationId: updateProyectoWithForm
      parameters:
        - name: id
          in: path
          description: ID del proyecto a actualizar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Crea un nuevo Proyecto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Proyecto'
          application/xml:
            schema:
              $ref: '#/components/schemas/Proyecto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Proyecto'
        required: true
      responses:
        '405':
          description: Invalid input
    delete:
      tags:
        - proyecto
      summary: Borra un proyecto
      description: Borra un proyecto
      operationId: deleteProyecto
      parameters:
        - name: id
          in: path
          description: id del proyecto a borrar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid proyecto value
  /actividades:
    get:
      tags:
        - actividad
      summary: Devuelve todas las actividades
      description: Devuelve todas las actividades
      operationId: getActividades
      parameters:
        - name: limit
          in: query
          description: Número máximo de actividades a devolver
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Número de actividades a saltar
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Actividad'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Actividad'
        '400':
          description: Invalid ID supplied
        '404':
          description: actividad not found
    post:
      tags:
        - actividad
      summary: Añade una nueva actividad
      description: Añade una nueva actividad
      operationId: addActividad
      requestBody:
        description: Crea una nueva Actividad
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actividad'
          application/xml:
            schema:
              $ref: '#/components/schemas/Actividad'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actividad'
        required: true
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actividad'
            application/xml:
              schema:
                $ref: '#/components/schemas/Actividad'
        '405':
          description: Invalid input
  /actividades/{id}:
    get:
      tags:
        - actividad
      summary: Encuentra una actividad según su ID
      description: Devuelve una única actividad
      operationId: getActividadById
      parameters:
        - name: id
          in: path
          description: ID de la actividad a devolver
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actividad'
            application/xml:
              schema:
                $ref: '#/components/schemas/Actividad'
        '400':
          description: Invalid ID supplied
        '404':
          description: actividad not found
    put:
      tags:
        - actividad
      summary: Actualiza una actividad con los datos del formulario
      description: ''
      operationId: updateActividadWithForm
      parameters:
        - name: id
          in: path
          description: ID de la actividad a actualizar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Crea una nueva Actividad
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actividad'
          application/xml:
            schema:
              $ref: '#/components/schemas/Actividad'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actividad'
        required: true
      responses:
        '405':
          description: Invalid input
    delete:
      tags:
        - actividad
      summary: Borra una actividad
      description: Borra una actividad
      operationId: deleteActividad
      parameters:
        - name: id
          in: path
          description: id de la actividad a borrar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid actividad value
  /reconocimientos:
    get:
      tags:
        - reconocimiento
      summary: Devuelve todos los reconocimientos
      description: Devuelve todos los reconocimientos
      operationId: getReconocimientos
      parameters:
        - name: limit
          in: query
          description: Número máximo de reconocimientos a devolver
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Número de reconocimientos a saltar
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reconocimiento'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reconocimiento'
        '400':
          description: Invalid ID supplied
        '404':
          description: reconocimiento not found
    post:
      tags:
        - reconocimiento
      summary: Añade un nuevo reconocimiento
      description: Añade un nuevo reconocimiento
      operationId: addReconocimiento
      requestBody:
        description: Crea un nuevo Reconocimiento
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reconocimiento'
          application/xml:
            schema:
              $ref: '#/components/schemas/Reconocimiento'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reconocimiento'
        required: true
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reconocimiento'
            application/xml:
              schema:
                $ref: '#/components/schemas/Reconocimiento'
        '405':
          description: Invalid input
  /reconocimientos/{id}:
    get:
      tags:
        - reconocimiento
      summary: Encuentra un reconocimiento según su ID
      description: Devuelve un único reconocimiento
      operationId: getReconocimientoById
      parameters:
        - name: id
          in: path
          description: ID del reconocimiento a devolver
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reconocimiento'
            application/xml:
              schema:
                $ref: '#/components/schemas/Reconocimiento'
        '400':
          description: Invalid ID supplied
        '404':
          description: reconocimiento not found
    put:
      tags:
        - reconocimiento
      summary: Actualiza un reconocimiento con los datos del formulario
      description: ''
      operationId: updateReconocimientoWithForm
      parameters:
        - name: id
          in: path
          description: ID del reconocimiento a actualizar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Crea un nuevo Reconocimiento
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reconocimiento'
          application/xml:
            schema:
              $ref: '#/components/schemas/Reconocimiento'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reconocimiento'
        required: true
      responses:
        '405':
          description: Invalid input
    delete:
      tags:
        - reconocimiento
      summary: Borra un reconocimiento
      description: Borra un reconocimiento
      operationId: deleteReconocimiento
      parameters:
        - name: id
          in: path
          description: id del reconocimiento a borrar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid reconocimiento value
  /curriculos:
    get:
      tags:
        - curriculo
      summary: Devuelve todos los curriculos
      description: Devuelve todos los curriculos
      operationId: getCurriculos
      parameters:
        - name: limit
          in: query
          description: Número máximo de curriculos a devolver
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Número de curriculos a saltar
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Curriculo'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Curriculo'
        '400':
          description: Invalid ID supplied
        '404':
          description: curriculo not found
    post:
      tags:
        - curriculo
      summary: Añade un nuevo curriculo
      description: Añade un nuevo curriculo
      operationId: addCurriculo
      requestBody:
        description: Crea un nuevo Curriculo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Curriculo'
          application/xml:
            schema:
              $ref: '#/components/schemas/Curriculo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Curriculo'
        required: true
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curriculo'
            application/xml:
              schema:
                $ref: '#/components/schemas/Curriculo'
        '405':
          description: Invalid input
  /curriculos/{id}:
    get:
      tags:
        - curriculo
      summary: Encuentra un curriculo según su ID
      description: Devuelve un único curriculo
      operationId: getCurriculoById
      parameters:
        - name: id
          in: path
          description: ID del curriculo a devolver
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curriculo'
            application/xml:
              schema:
                $ref: '#/components/schemas/Curriculo'
        '400':
          description: Invalid ID supplied
        '404':
          description: curriculo not found
    put:
      tags:
        - curriculo
      summary: Actualiza un curriculo con los datos del formulario
      description: ''
      operationId: updateCurriculoWithForm
      parameters:
        - name: id
          in: path
          description: ID del curriculo a actualizar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Crea un nuevo Curriculo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Curriculo'
          application/xml:
            schema:
              $ref: '#/components/schemas/Curriculo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Curriculo'
        required: true
      responses:
        '405':
          description: Invalid input
    delete:
      tags:
        - curriculo
      summary: Borra un curriculo
      description: Borra un curriculo
      operationId: deleteCurriculo
      parameters:
        - name: id
          in: path
          description: id del curriculo a borrar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid curriculo value
  /users:
    get:
      tags:
        - user
      summary: Devuelve todos los usuarios
      description: Devuelve todos los usuarios
      operationId: getUsers
      parameters:
        - name: limit
          in: query
          description: Número máximo de usuarios a devolver
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Número de usuarios a saltar
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: user not found
    post:
      tags:
        - user
      summary: Añade un nuevo usuario
      description: Añade un nuevo usuario
      operationId: addUser
      requestBody:
        description: Crea un nuevo User
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '405':
          description: Invalid input
  /users/{id}:
    get:
      tags:
        - user
      summary: Encuentra un usuario según su ID
      description: Devuelve un único usuario
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: ID del usuario a devolver
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: user not found
    put:
      tags:
        - user
      summary: Actualiza un usuario con los datos del formulario
      description: ''
      operationId: updateUserWithForm
      parameters:
        - name: id
          in: path
          description: ID del usuario a actualizar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Crea un nuevo User
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '405':
          description: Invalid input
    delete:
      tags:
        - user
      summary: Borra un usuario
      description: Borra un usuario
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: id del usuario a borrar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid user value
  /login:
    post:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      parameters:
        - name: email
          in: query
          description: The user email for login
          required: false
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
  /logout:
    post:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      parameters: []
      responses:
        default:
          description: successful operation
  /profile:
    get:
      tags:
        - user
      summary: Show profile of authenticated user
      description: ''
      operationId: getUserProfile
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username supplied
        '302':
          description: User not authenticated
    patch:
      tags:
        - user
      summary: Update user
      description: This can only be done by the logged in user.
      operationId: updateUser
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteAccount
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        linkedIn:
          type: string
          example: linkedinProfile
      xml:
        name: user
    Proyecto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        docente_id:
          $ref: '#/components/schemas/User'
          description: Tutor del proyecto
          example: 10
        nombre:
          type: string
          description: Nombre del proyecto
          example: Marca Personal FP
        dominio:
          type: string
          description: slug del nombre del proyecto
          example: marcapersonalfp
        metadatos:
          type: object
          format: json
          description: datos de interés del proyecto
          example: {
                fecha_inicio: '2023-01-15',
                fecha_fin: '2023-05-30',
                calificacion: 9.5
            }
      xml:
        name: proyecto
    Actividad:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        docente_id:
          $ref: '#/components/schemas/User'
          description: Tutor del proyecto
          example: 10
        insignia:
          type: string
          format: image
      xml:
        name: actividad
    Curriculo:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        user_id:
          $ref: '#/components/schemas/User'
          example: 10
        video_curriculum:
          type: string
          description: URL al videocurrículo
          example: https://youtu.be/2in5XMTlSWg
        texto_curriculum:
          type: string
          description: fichero con el currículo
          example: miCurriculo.pdf
      xml:
        name: curriculum
    Reconocimiento:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        estudiante_id:
          $ref: '#/components/schemas/User'
          description: Estudiante que solicita el reconocimiento
          example: 10
        actividad_id:
          $ref: '#/components/schemas/Actividad'
          description: Actividad para la que solicita el reconocimiento
          example: 10
        documento:
          type: integer
          format: int64
          description: Documento que evidencia la participación
          example: 10
        docente_validador:
          $ref: '#/components/schemas/User'
          description: Docente que reconoce la participación en la actividad
          example: 10
      xml:
        name: reconocimiento
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    User:
      description: User object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
        application/xml:
          schema:
            $ref: '#/components/schemas/User'
    Reconocimiento:
      description: Reconocimiento object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Reconocimiento'
        application/xml:
          schema:
            $ref: '#/components/schemas/Reconocimiento'
    Curriculo:
      description: Curriculo object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Curriculo'
        application/xml:
          schema:
            $ref: '#/components/schemas/Curriculo'
    Actividad:
      description: Actividad object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Actividad'
        application/xml:
          schema:
            $ref: '#/components/schemas/Actividad'
    Proyecto:
      description: Proyecto object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Proyecto'
        application/xml:
          schema:
            $ref: '#/components/schemas/Proyecto'
  securitySchemes:
    basic_auth:
      type: http
      scheme: basic
      
